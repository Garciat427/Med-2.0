{"version":3,"sources":["utils/Helper.js","components/PieChart/index.js","utils/API.js","pages/sub-pages/Home.js","pages/sub-pages/Trends/TrendsForm.js","pages/sub-pages/Trends/TrendsMap.js","components/DiagnosisRatioTable/TableRow.js","components/DiagnosisRatioTable/index.js","pages/sub-pages/trends.js","pages/sub-pages/ErrorPage.js","pages/sub-pages/Diagnosis/AboutMeForm.js","pages/sub-pages/Diagnosis/BodyLocationForm.js","pages/sub-pages/Diagnosis/SymptomsForm.js","pages/sub-pages/Diagnosis/DiagnoseSymptoms.js","pages/sub-pages/Diagnosis/Diagnosis.js","pages/sub-pages/Login.js","pages/MainApp.js","App.js","components/Navbar.js","components/Footer.js","index.js"],"names":["Helper","Math","floor","random","toString","list","colorList","forEach","element","push","getRandomColor","obj","JSON","parse","stringify","buildPieChartData","labelIn","dataIn","labels","datasets","data","backgroundColor","hoverBackgroundColor","PieChart","props","chartData","getRandomColourList","pieChartToShow","length","className","getDistinctDiagnosis","axios","get","getDistinctCities","saveRecords","recordSymptomDiagnosisData","post","getAllPrimaryDiagnosisInCityInPastWeekPercentage","cityName","getAllPrimaryDiagnosisInCityInPastWeek","getAllDiagnosisInCityInPastWeek","getAllPrimaryDiagnosisInCityInPast4Weeks","getAllRecords","getBodyGen","getBodySpec","id","console","log","getBodySymp","gender","birthYear","getSympSel","symptoms","getDiagSel","Home","state","rawData","API","then","res","labelsIn","cityIn","diagnosesIn","rawDataIn","index","p","parseFloat","percentage","city","name","newChartData","cities","diagnoses","newState","cloneObject","setState","catch","err","this","href","Component","TrendsForm","records","DistinctDiagnosis","DistinctCities","onChange","change","value","disabled","map","key","disease","selected","onClick","handleFormSubmit","React","TableRow","DiagnosisRatioTable","items","item","Trends","rendermap","percentageData","handleInputChange","event","target","preventDefault","callAPI","renderMap","ErrorPage","AboutMeForm","onSubmit","submitHandler","firstName","label","s","validate","lastName","type","waves","style","marginRight","BodyLocation","bodyLocationType","genLocation","locations","location","ID","Name","class","width","src","imageRoute","SymptomsForm","symptom","handleSymptomsSelect","margin","minPassed","DiagnoseSymptoms","diagnosis","Issue","textClassName","title","actions","ProfName","Accuracy","IcdName","Diagnosis","selLocation","BodyLocationForm","BodyGen","bodySymp","symptomsSel","maxPassed","DiagnosisForm","handleInputBodyLoc","imgPath","strSymptoms","sympArr","handleSubmitForm","Login","MainApp","Switch","Route","exact","path","component","login","App","Navbar","Footer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34f2d22e.chunk.js","sourcesContent":["// Helper class that will contain generic helper methods for charts\r\nclass Helper {\r\n\r\n    getRandomColor() {\r\n        let c = '#' + Math.floor(Math.random() * 16777215).toString(16);\r\n        return c;\r\n    };\r\n\r\n    getRandomColourList(list) {\r\n        let colorList = [];\r\n        list.forEach(element => colorList.push(this.getRandomColor()));\r\n        return colorList;\r\n    };\r\n\r\n    cloneObject(obj) {\r\n        return JSON.parse(JSON.stringify(obj));\r\n    };\r\n\r\n}\r\n\r\nexport default Helper\r\n\r\n","import React from \"react\";\r\nimport { Pie } from 'react-chartjs-2';\r\nimport \"./style.css\";\r\nimport Helper from \"../../utils/Helper\";\r\n\r\nfunction PieChart(props) {\r\n\r\n    let data = buildPieChartData(props.labels, props.chartData, new Helper().getRandomColourList(props.labels));\r\n\r\n    // show the pie chart if there is data. Otherwise, show a message saying no data found.\r\n    let pieChartToShow =  (props.labels.length > 0) ? <Pie data={data} /> : <div className='center-align'>Sorry, No results were found for the current city</div>;\r\n\r\n    return (\r\n        <div className=\"pie-size\">\r\n            {pieChartToShow}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n//\r\nconst buildPieChartData = (labelIn, dataIn, colorList) => {\r\n    const data = {\r\n        labels: labelIn,\r\n        datasets: [{\r\n            data: dataIn,\r\n            backgroundColor: colorList,\r\n            hoverBackgroundColor: colorList\r\n        }]\r\n    };\r\n    return data;\r\n};\r\n\r\n\r\nexport default PieChart;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n\r\n\r\n  /**************************************************************************** */\r\n  /***************************  Med lookup APIs Below ***************************** */\r\n  /**************************************************************************** */\r\n\r\n  getDistinctDiagnosis: () => {\r\n    return axios.get(\"/api/diagnosis/distinct-diagnosis\");\r\n\r\n  },\r\n\r\n  getDistinctCities: () => {\r\n    return axios.get(\"/api/records/distinct-cities\");\r\n\r\n  },\r\n\r\n  /**************************************************************************** */\r\n  /***************************  Med DB APIs Below ***************************** */\r\n  /**************************************************************************** */\r\n\r\n  /* SAVING: the following API can be used to save a record. The following is an example of a complicated input with multiple symptoms and multipl diagnosis\r\n      {\r\n        \"type\": {\"birthYear\": 1988, \"gender\": \"male\"},\r\n        \"city\": \"niagara\",\r\n        \"latitude\": \"333\",\r\n        \"longitude\": \"777\",\r\n        \"symptoms\": [{\"id\": 5, \"name\":\"sneeze\"}, {\"id\": 27, \"name\":\"headach\"}],\r\n        \"diagnosis\": [{\"id\": 70, \"name\":\"bug flu2\", \"accuracy\": 70}, {\"id\": 22, \"name\":\"cold2\", \"accuracy\": 30}]\r\n      }\r\n      */\r\n  saveRecords: function (recordSymptomDiagnosisData) {\r\n    return axios.post(\"/api/records\", recordSymptomDiagnosisData);\r\n\r\n  },\r\n\r\n  /* PIE CHART: the following API calls can be used for Pie Chart. Example response\r\n    [\r\n      {\r\n          \"city\": \"NIAGARA\",\r\n          \"name\": \"bug flu\",\r\n          \"total\": 2,\r\n          \"percentage\": \"100.00\"\r\n      }\r\n    ]\r\n    */\r\n  getAllPrimaryDiagnosisInCityInPastWeekPercentage: function (cityName) {\r\n    return axios.get(\"api/diagnosis/cityDiagnosisRatio/\" + cityName + \"/weeks-back/1\");\r\n  },\r\n\r\n\r\n  /* TRENDS DATA: the following API calls can be used for trends page. Example response\r\n    [\r\n      {\r\n          \"latitude\": \"333\",\r\n          \"longitude\": \"777\",\r\n          \"city\": \"HAMILTON\",\r\n          \"name\": \"cancer2\"\r\n      }\r\n    ]\r\n  */\r\n  getAllPrimaryDiagnosisInCityInPastWeek: function (cityName) {\r\n    return axios.get(\"api/diagnosis/city/\" + cityName + \"/weeks-back/1/is-primary/1\");\r\n  },\r\n\r\n  getAllDiagnosisInCityInPastWeek: function (cityName) {\r\n    return axios.get(\"api/diagnosis/city/\" + cityName + \"/weeks-back/1/is-primary/0\");\r\n  },\r\n\r\n  getAllPrimaryDiagnosisInCityInPast4Weeks: function (cityName) {\r\n    return axios.get(\"api/diagnosis/city/\" + cityName + \"/weeks-back/4/is-primary/1\");\r\n  },\r\n\r\n  /* GET ALL records raw data without diagnosis or symptoms. The following is a sample output\r\n  [\r\n    {\r\n      \"id\": 1,\r\n      \"age\": 31,\r\n      \"gender\": \"M\",\r\n      \"city\": \"OAKVILLE\",\r\n      \"latitude\": \"333\",\r\n      \"longitude\": \"777\",\r\n      \"createdAt\": \"2019-11-11T05:03:18.000Z\",\r\n      \"updatedAt\": \"2019-11-11T05:03:18.000Z\"\r\n    }\r\n  ]\r\n*/\r\n  getAllRecords: function () {\r\n    return axios.get(\"/api/records\");\r\n  },\r\n\r\n  \r\n  /**************************************************************************** */\r\n  /*************************** API Medic Calls Below  ***************************** */\r\n  /**************************************************************************** */\r\n\r\n  //*************************** Req 1 + 2 - Body Locations ***************************\r\n  \r\n  //Req 1 - Get General Body Locations\r\n  getBodyGen: () => {\r\n    return axios.get(\"/api/apiMedic/bodyLoc\");\r\n  },\r\n\r\n  //Req 2 - Get Specific Body Locations\r\n  getBodySpec: (id) => {\r\n    console.log(id)\r\n    return axios.get(\"/api/apiMedic/bodyLoc/\" + id);\r\n  },\r\n\r\n  /*  \r\n    id = Type: Int \r\n      Represents the id for the general body location selected\r\n      ex: \"16\" -> Abdomen, pelvis & buttocks\r\n\r\n    Example reqUrl: /api/apiMedic/bodyLoc/16\r\n  */ \r\n\r\n\r\n//*************************** Req 3 + 4 + n - Symptoms ***************************\r\n\r\n  //Req 3 - Get Symptoms based on Specific Body Location\r\n  getBodySymp: (gender, birthYear, id) => {\r\n    return axios.get(\"/api/apiMedic/bodySymp/\" + gender + \"/\" + birthYear + \"/\"+ id);\r\n  },\r\n\r\n  //Req 4 + n - Get Symptoms based on previous symptoms\r\n  getSympSel: (gender, birthYear, symptoms) => {\r\n    return axios.get(\"/api/apiMedic/sympSel/\" + gender + \"/\" + birthYear + \"/\"+ symptoms);\r\n  },\r\n\r\n  /*  \r\n    gender = Type: String \r\n      Represents Gender of User (For Diagnosis purposes)\r\n      Possible Cases: \"Male\" , \"Female\"\r\n\r\n    birthYear = Type: Int \r\n      Represents the User's Birth Year (For Diagnosis purposes) - Used to find the age of the User\r\n      ex: \"1998\" \r\n      \r\n    id = Type: Int \r\n      Represents the id for the specific body location selected\r\n      ex: \"33\" -> Back\r\n\r\n    symptoms = Type: Int Array => Stringified \r\n      An Int Array of symptom ID's (Ints). The array must be stringified then passed in the url\r\n      ex: [10, 50] => Stringified => \"[10, 50]\"\r\n\r\n    Example req3Url: /api/apiMedic/bodySymp/male/1990/33\r\n    Example req4+nUrl: /api/apiMedic/sympSel/male/1990/[10, 50]\r\n  */\r\n\r\n getDiagSel: (gender, birthYear, symptoms) => {\r\n  return axios.get(\"/api/apiMedic/diagSel/\" + gender + \"/\" + birthYear + \"/\"+ symptoms);\r\n},\r\n\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PieChart from \"../../components/PieChart\";\r\nimport API from \"../../utils/API\";\r\nimport Helper from \"../../utils/Helper\";\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        chartData: {\r\n            labels: [],\r\n            data: [],\r\n        },\r\n        rawData: []\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        // Call the API to load the pie chart\r\n        API.getAllPrimaryDiagnosisInCityInPastWeekPercentage(\"all\")\r\n            .then(res => {\r\n\r\n                let labelsIn = [];\r\n                let dataIn = [];\r\n                let cityIn = [];\r\n                let diagnosesIn = [];\r\n                let rawDataIn = [];\r\n\r\n                (res.data).forEach((element, index) => {\r\n                    let p = parseFloat(element.percentage);\r\n                    labelsIn.push(\"[\" + element.city + \"] \" + element.name);\r\n                    dataIn.push(p);\r\n                    cityIn.push(element.city);\r\n                    diagnosesIn.push(element.name);\r\n                    rawDataIn.push(element);\r\n                });\r\n\r\n                let newChartData = {\r\n                    labels: labelsIn,\r\n                    data: dataIn,\r\n                    cities: cityIn,\r\n                    diagnoses: diagnosesIn\r\n                }\r\n                let newState = new Helper().cloneObject(this.state);\r\n                newState.chartData = newChartData;\r\n                newState.rawData = rawDataIn;\r\n\r\n                this.setState(newState);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s8\">\r\n\r\n                        <PieChart\r\n                            labels={this.state.chartData.labels}\r\n                            chartData={this.state.chartData.data}\r\n                        />\r\n          \r\n                    </div>\r\n                    <div className=\"col s4\">\r\n                        <h3>Welcome to Med 2.0</h3>\r\n                        <p>\r\n                            We track and follow trends in illnesses in Canada. Check out our Diagnosis Button if you feel you may be ill. Please note we will be using your location, symptoms and diagnosis for our goal of tracking illness. You are welcome to have a look at our trends page as well to see what kind of deseases are currently a concern in your area. Wishing you Good Health!\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                {/* Button Section */}\r\n                <div className=\"row\">\r\n                    <div className=\"col s8 center\">\r\n                        <a className=\"waves-effect waves-light btn-large buttonLink deep-purple lighten-1 hoverable\" href={\"/trends\"}>Show Trends</a>\r\n                    </div>\r\n                    <div className=\"col s4 center\">\r\n                        <a className=\"waves-effect waves-light btn-large buttonLink deep-purple lighten-1 hoverable\" href={\"/diagnosis\"}>Get Diagnosis</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Button, Card, Row, Col, Dropdown, Select } from 'react-materialize';\r\nimport API from \"../../../utils/API\";\r\n\r\nclass TrendsForm extends React.Component {\r\n\r\n    state = {\r\n        diagnoses: [],\r\n        records: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.DistinctDiagnosis();\r\n        this.DistinctCities();\r\n    }\r\n\r\n    DistinctDiagnosis = () => {\r\n        API.getDistinctDiagnosis()\r\n            .then(res =>\r\n                this.setState({ diagnoses: res.data, name: \"\" })\r\n            )\r\n            .catch(err => console.log(err));\r\n    };\r\n    DistinctCities = () => {\r\n        API.getDistinctCities()\r\n            .then(res =>\r\n                this.setState({ records: res.data, city: \"\" })\r\n            )\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s6\">\r\n                        <Select onChange={this.props.change} value={this.props.city} name=\"city\" >\r\n                            <option value=\"\" disabled>Choose your city></option>\r\n                            {this.state.records.map((records, index) => (\r\n                                <option key={records.city + index} value={records.city}>{records.city}</option>\r\n                            )\r\n                            )}\r\n                        </Select>\r\n                    </div>\r\n\r\n                    <div className=\"input-field col s6\">\r\n                        <Select onChange={this.props.change} value={this.props.disease} name=\"disease\">\r\n                            <option value=\"\" disabled selected>Choose your disease></option>\r\n                            {this.state.diagnoses.map((diagnoses, index) => (\r\n                                <option key={diagnoses.name + index} value={diagnoses.name}>{diagnoses.name}</option>\r\n                            )\r\n                            )}\r\n                        </Select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <button className=\"waves-effect waves-light btn col s2 left-align\"\r\n                        disabled={!(this.props.city)}\r\n                        onClick={this.props.handleFormSubmit} >Submit</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default TrendsForm;","import React from \"react\";\r\n\r\n//import API from \"../../../utils/API\";\r\n\r\n// trends page - map component\r\n\r\nclass TrendsMap extends React.Component {\r\n\r\n  // not sure if componentDidMount is necessary\r\n  \r\n  // componentDidMount() {\r\n  //   API.getAllPrimaryDiagnosisInCityInPast4Weeks(this.props.city)\r\n  //   .then(res => this.setState({ records: res.data }))\r\n  //   .catch(err => console.log(err));\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col s6 offset-s2\">\r\n          <p>GoogleMaps Trends page</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TrendsMap;","import React from \"react\";\r\n\r\nfunction TableRow(props) {\r\n    return (\r\n        <tr>\r\n            <td>{props.city}</td>\r\n            <td>{props.name}</td>\r\n            <td>{props.percentage}</td>\r\n        </tr>\r\n    );\r\n}\r\nexport default TableRow;","import React, { Component } from \"react\";\r\nimport TableRow from \"./TableRow\";\r\nimport API from \"../../utils/API\";\r\nimport Helper from \"../../utils/Helper\";\r\n\r\nclass DiagnosisRatioTable extends Component {\r\n\r\n    state = {\r\n        rawData: []\r\n    };\r\n\r\n    // componentDidMount() {\r\n    //     console.log (this.props.cityName);\r\n    //     this.callAPI(this.props.cityName);\r\n    // }\r\n\r\n    // callAPI(cityName) {\r\n    //     // Call the API to load the pie chart\r\n    //     API.getAllPrimaryDiagnosisInCityInPastWeekPercentage(cityName)\r\n    //         .then(res => {\r\n\r\n    //             let rawDataIn = [];\r\n\r\n    //             (res.data).forEach((element) => {\r\n    //                 rawDataIn.push(element);\r\n    //             });\r\n\r\n    //             let newState = new Helper().cloneObject(this.state);\r\n    //             newState.rawData = rawDataIn;\r\n    //             this.setState(newState);\r\n    //         })\r\n    //         .catch(err => console.log(err));\r\n    // }\r\n\r\n    render() {\r\n        // const items = this.state.rawData;\r\n        const items = this.props.rawData;\r\n        console.log(\"here ************\");\r\n        console.log(items);\r\n\r\n        return (\r\n\r\n            <div>\r\n                <table className=\"striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>City</th>\r\n                            <th>Diagnosis</th>\r\n                            <th>Ratio</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n\r\n                        {items.map((item, index) => {\r\n                            return <TableRow\r\n                                key={index}\r\n                                city={item.city}\r\n                                name={item.name}\r\n                                percentage={item.percentage}\r\n                            />\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default DiagnosisRatioTable;\r\n","import React, { Component } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport Helper from \"../../utils/Helper\";\r\n//import { Link } from \"react-router-dom\";\r\nimport TrendsForm from \"./Trends/TrendsForm\";\r\nimport TrendsMap from \"./Trends/TrendsMap\";\r\nimport TrendsChart from \"../../components/DiagnosisRatioTable\";\r\nimport { set } from \"mongoose\";\r\n\r\nlet rendermap;\r\n\r\nclass Trends extends Component {\r\n\r\n    callAPI(cityName) {\r\n        // Call the API to load the pie chart\r\n        API.getAllPrimaryDiagnosisInCityInPastWeekPercentage(cityName)\r\n            .then(res => {\r\n\r\n                let rawDataIn = [];\r\n\r\n                (res.data).forEach((element) => {\r\n                    rawDataIn.push(element);\r\n                });\r\n\r\n                let newState = new Helper().cloneObject(this.state);\r\n                newState.percentageData = rawDataIn;\r\n                this.setState(newState);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    state = {\r\n        city: \"\",\r\n        disease: \"\",\r\n        rendermap: false,\r\n        percentageData: []\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        console.log(event.target);\r\n        console.log(event.target.name);\r\n        console.log(event.target.value);\r\n        console.log(\"handle input change\");\r\n        // Getting the value and name of the input which triggered the change\r\n        const { name, value } = event.target;\r\n\r\n        // Updating the input's state\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n\r\n    };\r\n\r\n\r\n    handleFormSubmit = (event, city) => {\r\n        // Preventing the default behavior of the form submit (which is to refresh the page)\r\n        event.preventDefault();\r\n\r\n        //setState ()\r\n        API.getAllPrimaryDiagnosisInCityInPast4Weeks(this.state.city)\r\n            .then(res => {\r\n                let newState = new Helper().cloneObject(this.state);\r\n\r\n                this.callAPI(this.state.city);\r\n                newState.renderMap = true;\r\n\r\n                // this.setState({ records: res.data });\r\n                this.setState(newState);\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <h5> Have a look at various diagnosis trends </h5>\r\n                </div>\r\n                <TrendsForm city={this.state.city} disease={this.state.disease} rendermap={this.state.rendermap} change={this.handleInputChange}\r\n                    handleFormSubmit={this.handleFormSubmit} />\r\n\r\n                {/* {this.state.rendermap ?<TrendsChart rawData={this.state.percentageData} /> : null} */}\r\n                {/* {this.state.rendermap ? <TrendsMap /> : null} */}\r\n                {/* <TrendsChart \r\n                        cityName = {this.state.city}\r\n                    /> */}\r\n\r\n                <TrendsChart rawData={this.state.percentageData} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Trends;\r\n","import React from \"react\";\r\n\r\nfunction ErrorPage() {\r\n  return (\r\n    <div className = \"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8\">\r\n          <h1> Error 404 :( Sorry! No content here :( </h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React, { Component } from \"react\";\r\nimport { TextInput, Button } from 'react-materialize';\r\n\r\nclass AboutMeForm extends Component {\r\n   render(){\r\n      return (\r\n         <form onSubmit = {this.props.submitHandler}>\r\n            <div className=\"container\">\r\n               <div className=\"row\">\r\n                  <div className = \"col s12\">\r\n                     <h3 className=\"center\">About Me</h3>\r\n                     <p className=\"center\">Tell us about your self! We mainly need this information to provide a more accurate diagnosis later!\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n\r\n               <div className=\"row\">\r\n                  {/* First Name */}\r\n                  <TextInput \r\n                     value = {this.props.firstName} \r\n                     onChange = {this.props.handleInputChange} \r\n                     name = \"firstName\" \r\n                     label=\"First Name (Optional)\"\r\n                     s = {6} \r\n                     validate = {true}\r\n                  />\r\n                  {/* Last Name */}\r\n                  <TextInput \r\n                     value = {this.props.lastName} \r\n                     onChange = {this.props.handleInputChange} \r\n                     name = \"lastName\" \r\n                     label=\"Last Name (Optional)\"\r\n                     s = {6} \r\n                     validate = {true}\r\n                  />\r\n               </div>\r\n               \r\n               <div className=\"row\">\r\n                  {/* Birth Year */}\r\n                  <TextInput \r\n                     value = {this.props.birthYear} \r\n                     onChange = {this.props.handleInputChange} \r\n                     name = \"birthYear\" \r\n                     label=\"Birth Year (Required)\"\r\n                     type = \"number\"\r\n                     validate = {true}\r\n                     s = {6} \r\n                  />\r\n                  {/* Gender */}\r\n                  <div className=\"input-field col s6\">\r\n                     <select \r\n                        name = \"gender\" \r\n                        label=\"Gender (Required)\"\r\n                        value = {this.props.gender} \r\n                        onChange = {this.props.handleInputChange} \r\n                        validate = {true}\r\n                        className=\"textColor\"\r\n                     >\r\n                        <option selected disabled value=\"\">Choose a Gender</option>\r\n                        <option value=\"male\">Male</option>\r\n                        <option value=\"female\">Female</option>\r\n                        <option value=\"male\">Other</option>\r\n                     </select>\r\n                     <label>Gender (Required)</label>\r\n                  </div>\r\n               </div>\r\n\r\n               <div className=\"row\">\r\n                  <div className = \"col s12 center\">\r\n                     <Button \r\n                     className= \"deep-purple lighten-1 hoverable\"\r\n                     disabled={!(this.props.gender && this.props.birthYear)}\r\n                     type=\"submit\" \r\n                     waves=\"light\" \r\n                     style={{marginRight: '5px'}}>\r\n                        Submit\r\n                     </Button>\r\n                  </div>\r\n               </div>\r\n               \r\n            </div>\r\n         </form>\r\n       ) \r\n    }    \r\n }\r\n\r\n export default AboutMeForm;","import React, { Component } from \"react\";\r\nimport { Select, Button } from 'react-materialize';\r\n\r\nclass BodyLocation extends Component {\r\n   render() {\r\n      return (\r\n         <form onSubmit={this.props.submitHandler}>\r\n            <div className=\"container\">\r\n               <div className=\"row\">\r\n                  <div className=\"col s12\">\r\n                     <h3 className=\"center\"> {this.props.bodyLocationType}</h3>\r\n                     <p className=\"center\">Selecting the following locations will allow us to narrow down the location of the symptoms. \r\n                     </p>\r\n                     <p className=\"center\">\r\n                     <i className=\"fas fa-caret-down arrowDown\"></i>Select a {this.props.bodyLocationType} Below<i className=\"fas fa-caret-down arrowDown\"></i>\r\n                     </p>\r\n                  </div> \r\n               </div>\r\n\r\n               <div className=\"row\">\r\n                  {/* Body Location */}\r\n                  <div className=\"col s8\">\r\n                     <Select\r\n                        s = {12}\r\n                        value={this.props.genLocation}\r\n                        name=\"selLocation\"\r\n                        label= {this.props.bodyLocationType}\r\n                        onChange={this.props.handleInputChange}\r\n                        validate = {true}\r\n                     >\r\n                        <option value=\"\" selected disabled>\r\n                           Choose your option\r\n                        </option>\r\n                        {this.props.locations.map(location => (\r\n                           <option key={location.ID} value={location.ID}>{location.Name}</option>\r\n                        ))}\r\n                     </Select>\r\n                     \r\n                  </div>\r\n                  <div className=\"col s4\">\r\n                     <img class=\"materialboxed responsive-img\" id=\"bodyVector\" width=\"650\"\r\n                     src={this.props.imageRoute}></img>\r\n                  </div>\r\n               </div>\r\n\r\n               <div className=\"row\">\r\n                  <div className=\"col s12 center\">\r\n                     <Button \r\n                        className= \"deep-purple lighten-1 hoverable\"\r\n                        type=\"submit\"\r\n                        waves=\"light\"\r\n                        style={{ marginRight: '5px' }}>\r\n                        Submit\r\n                     </Button>\r\n                  </div>\r\n               </div>\r\n\r\n            </div>\r\n         </form>\r\n      )\r\n   }\r\n}\r\n\r\n\r\nexport default BodyLocation;","import React, { Component } from \"react\";\r\nimport { Button } from 'react-materialize';\r\n\r\nclass SymptomsForm extends Component {\r\n   render() {\r\n      return (\r\n         <div className=\"container\">\r\n            <div className=\"row\">\r\n               <div className=\"col s12\">\r\n                  <h3 className=\"center\">Symptoms</h3>\r\n                  <p className=\"center\">\r\n                     We proposed a list of symptoms that you may be experiencing based on the information you provided.\r\n                  </p>\r\n                  <p className=\"center\">\r\n                     Please select the (Minimum 2) symptoms you are experiencing\r\n                  </p>\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n               <div className=\"col s12\">\r\n                  <div> {/* Button box */}\r\n                     {this.props.symptoms.map(symptom => (\r\n                        <button\r\n                           className=\"waves-effect waves-light btn deep-purple lighten-1 hoverable\"\r\n                           onClick={this.props.handleSymptomsSelect}\r\n                           waves=\"light\"\r\n                           style={{ margin: '5px' }}\r\n                           key={symptom.ID}\r\n                           value={symptom.ID}>\r\n                           {symptom.Name}\r\n                        </button>\r\n                     ))}\r\n                  </div>\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n               <div className=\"col s12 center\">\r\n                  <Button\r\n                     className=\"deep-purple lighten-1 hoverable\"\r\n                     disabled={!(this.props.minPassed)}\r\n                     onClick={this.props.handleSymptomsSelect}\r\n                     value=\"GetDiag\"\r\n                     waves=\"light\"\r\n                     style={{ margin: '5px' }}\r\n                  > Get Diagnosis\r\n                  </Button>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\n\r\nexport default SymptomsForm;","import React, { Component } from \"react\";\r\nimport { Card } from 'react-materialize';\r\n\r\nclass DiagnoseSymptoms extends Component {\r\n   render() {\r\n      return (\r\n         <div className=\"container\">\r\n            <div className=\"row\">\r\n               <div className=\"col s12\">\r\n                  <h3 className=\"center\">Diagnosis</h3>\r\n                  <p className=\"center\">\r\n                     The following is a list of diagnosis possible based on the symptoms provided.\r\n                  </p>\r\n                  <p className=\"center disclaimer\">\r\n                     *** Please note that these diagnosis are based on empirical data and should not be taken as an official diagnosis for serious conditions. Please see you doctor for serious conditions. ***\r\n                  </p>\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n               <div className=\"col s12 center\">\r\n                  <a\r\n                     className=\"waves-effect waves-light btn-large buttonLink deep-purple lighten-1 hoverable\" href={\"/\"}\r\n                  > Return to Home\r\n                  </a>\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n               <div className=\"col s12\">\r\n                  <div> {/* Diagnosis Box */}\r\n                     {this.props.diagnosis.map(diagnosis => (\r\n                        <div className=\"row\">\r\n                           <div className=\"col s12\">\r\n                              <Card\r\n                                 key={diagnosis.Issue.ID}\r\n                                 className=\"blue-grey darken-1\"\r\n                                 textClassName=\"white-text\"\r\n                                 title={diagnosis.Issue.Name}\r\n                                 actions={[<a />, <a />]}>\r\n                                 <p>Professional Name: {diagnosis.Issue.ProfName}</p>\r\n                                 <p>Accuracy: {diagnosis.Issue.Accuracy}</p>\r\n                                 <p>Medical Term: {diagnosis.Issue.IcdName}</p>\r\n                              </Card>\r\n                           </div>\r\n                        </div>\r\n                     ))}\r\n                  </div>\r\n               </div>\r\n            </div>\r\n\r\n            \r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\n\r\nexport default DiagnoseSymptoms;","import React, { Component } from \"react\";\r\n\r\n// Page Dependencies\r\nimport AboutMeForm from \"./AboutMeForm\"\r\nimport BodyLocationForm from \"./BodyLocationForm\"\r\nimport SymptomsForm from \"./SymptomsForm\"\r\nimport DiagnoseSymptoms from \"./DiagnoseSymptoms\"\r\n\r\n\r\n//Route Dependencies\r\nimport API from \"../../../utils/API\"\r\n\r\nclass Diagnosis extends Component {\r\n   state = {\r\n      /* About Me Page */\r\n      AboutMeForm: true,\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      birthYear: \"\",\r\n      gender: \"\",\r\n\r\n      /* Body Locations Page */\r\n      imageRoute : \"assets/images/BodyVectors/Empty.png\",\r\n      locations: [],\r\n      bodyLocationType: \"General Body Location\",\r\n      selLocation: \"\",\r\n      BodyLocationForm: false,\r\n      BodyGen: true,\r\n\r\n      /* Symptoms Page */\r\n      SymptomsForm: false,\r\n      bodySymp: true,\r\n      symptoms: [],\r\n      symptomsSel: [],\r\n      minPassed: false,\r\n      maxPassed: false,\r\n\r\n      /* Diagnosis Page */\r\n      DiagnosisForm: false,\r\n      diagnosis: []\r\n   }\r\n\r\n   handleInputChange = (event) => {\r\n      this.setState({ [event.target.name]: event.target.value })\r\n   }\r\n   handleInputBodyLoc = (event) => {\r\n      if (this.state.BodyGen){\r\n         let imgPath\r\n         if (event.target.value == 16) {\r\n            imgPath = \"assets/images/BodyVectors/APB.png\"\r\n         } else if (event.target.value == 7) {\r\n            imgPath = \"assets/images/BodyVectors/ArmsShoulders.png\"\r\n         } else if (event.target.value == 15) {\r\n            imgPath = \"assets/images/BodyVectors/ChestBack.png\"\r\n         } else if (event.target.value == 6) {\r\n            imgPath = \"assets/images/BodyVectors/HeadThroatNeck.png\"\r\n         } else if (event.target.value == 10) {\r\n            imgPath = \"assets/images/BodyVectors/Legs.png\"\r\n         } else {\r\n            imgPath = \"assets/images/BodyVectors/skinJGeneral.png\"\r\n         }\r\n         this.setState({ imageRoute: imgPath })\r\n      }\r\n\r\n      this.setState({ [event.target.name]: event.target.value })\r\n   }\r\n   handleSymptomsSelect = (event) => {\r\n      console.log (event.target.value)\r\n      let strSymptoms\r\n      //If Get Diag Button was Pressed\r\n      if (event.target.value === \"GetDiag\") {\r\n      strSymptoms = JSON.stringify(this.state.symptomsSel)\r\n      console.log(\"Test\")\r\n         //Get Diagnosis\r\n         API.getDiagSel(this.state.gender, this.state.birthYear,\r\n            strSymptoms)\r\n            .then(res => {\r\n               console.log(res.data)\r\n               //Place new Symptoms in symptoms State\r\n               this.setState({ diagnosis: res.data })\r\n               //Set State of DiagnosisForm to True\r\n               this.setState({ DiagnosisForm: true })\r\n               //Set Symptoms Form to False to display DiagnoseSymptoms Page\r\n               this.setState({ SymptomsForm: false })\r\n            })\r\n            .catch(err => console.log(err)); //Catch Errors \r\n\r\n\r\n\r\n      } else { //Select Symptoms Button\r\n         //Collect Selected Symptoms\r\n         let sympArr = this.state.symptomsSel\r\n         sympArr.push(event.target.value)\r\n         this.setState({ symptomsSel: sympArr })\r\n         \r\n\r\n         //Get New Proposed Symptoms\r\n         strSymptoms = JSON.stringify(this.state.symptomsSel)\r\n         console.log(strSymptoms)\r\n         API.getSympSel(this.state.gender, this.state.birthYear,\r\n            strSymptoms)\r\n            .then(res => {\r\n               //Place new Symptoms in symptoms State\r\n               this.setState({ symptoms: res.data })\r\n               console.log(this.state.symptoms)\r\n               if (!this.state.minPassed){\r\n                  if (this.state.symptomsSel.length >= 2){\r\n                     this.setState({ minPassed: true })\r\n                  }\r\n               }\r\n            })\r\n            .catch(err => console.log(err)); //Catch Errors \r\n      }\r\n   }\r\n\r\n   handleSubmitForm = (event) => {\r\n      event.preventDefault();\r\n\r\n      //About Me  => Bodylocation(General)\r\n      if (this.state.AboutMeForm) { //If About Me Form is Displayed\r\n         //Pull General Body Locations From Api and Change Form\r\n         API.getBodyGen()\r\n            .then(res => {\r\n               //Place Genera; Locations in Locations State\r\n               this.setState({ locations: res.data })\r\n\r\n               //Set BodyLocationsForm To True\r\n               this.setState({ BodyLocationForm: true })\r\n\r\n               //Set AboutMeForm to False to display BodyLocationsForm\r\n               this.setState({ AboutMeForm: false })\r\n            })\r\n            .catch(err => console.log(err)); //Catch Errors \r\n      }\r\n\r\n      //Bodylocation(General) => Bodylocation(Specific)\r\n      else if (this.state.BodyLocationForm && this.state.BodyGen) {\r\n         API.getBodySpec(this.state.selLocation)\r\n            .then(res => {\r\n               //Place Specific Locations in Locations State\r\n               this.setState({ locations: res.data })\r\n\r\n               //Set BodyGen To False (Specific Locations)\r\n               this.setState({ BodyGen: false })\r\n               this.setState({ bodyLocationType: \"Specific Body Location\" })\r\n            })\r\n            .catch(err => console.log(err)); //Catch Errors \r\n      }\r\n\r\n      //Bodylocation(Specific) => BodySymptoms\r\n      else if (this.state.BodyLocationForm && !this.state.BodyGen) {\r\n         API.getBodySymp(this.state.gender, this.state.birthYear, this.state.selLocation)\r\n            .then(res => {\r\n               //Place Specific Locations in Locations State\r\n               this.setState({ symptoms: res.data })\r\n               console.log(this.state.symptoms)\r\n\r\n               //Set SymptomsForm To True\r\n               this.setState({ SymptomsForm: true })\r\n\r\n               //Set BodyLocationsForm to False to display SymptomsForm\r\n               this.setState({ BodyLocationForm: false })\r\n            })\r\n            .catch(err => console.log(err)); //Catch Errors \r\n      }\r\n\r\n      //BodySymptoms => DiagForm\r\n      else if (this.state.SymptomsForm) {\r\n         API.getBodySymp(this.state.gender, this.state.birthYear, this.state.selLocation)\r\n            .then(res => {\r\n               //Place Specific Locations in Locations State\r\n               this.setState({ symptoms: res.data })\r\n               console.log(this.state.symptoms)\r\n\r\n               //Set SymptomsForm To True\r\n               this.setState({ SymptomsForm: true })\r\n\r\n               //Set BodyLocationsForm to False to display SymptomsForm\r\n               this.setState({ BodyLocationForm: false })\r\n            })\r\n            .catch(err => console.log(err)); //Catch Errors \r\n      }\r\n\r\n   }\r\n\r\n   render() {\r\n      if (this.state.AboutMeForm) {\r\n         return (\r\n            <AboutMeForm\r\n               submitHandler={this.handleSubmitForm}\r\n               handleInputChange={this.handleInputChange}\r\n               firstName={this.state.firstName}\r\n               lastName={this.state.lastName}\r\n               birthYear={this.state.birthYear}\r\n               gender={this.state.gender}\r\n            />\r\n         )\r\n      } else if (this.state.BodyLocationForm) {\r\n         return (\r\n            <BodyLocationForm\r\n               submitHandler={this.handleSubmitForm}\r\n               handleInputChange={this.handleInputBodyLoc}\r\n               imageRoute={this.state.imageRoute}\r\n               locations={this.state.locations}\r\n               genLocation={this.state.genLocation}\r\n               bodyLocationType={this.state.bodyLocationType}\r\n            />\r\n         )\r\n      } else if (this.state.SymptomsForm) {\r\n         return (\r\n            <SymptomsForm\r\n               submitHandler={this.handleSubmitForm}\r\n               handleSymptomsSelect={this.handleSymptomsSelect}\r\n               symptoms={this.state.symptoms}\r\n               minPassed={this.state.minPassed}\r\n            />\r\n         )\r\n      } else if (this.state.DiagnosisForm) {\r\n         return (\r\n            <DiagnoseSymptoms\r\n               submitHandler={this.handleSubmitForm}\r\n               handleSymptomsSelect={this.handleSymptomsSelect}\r\n               diagnosis={this.state.diagnosis}\r\n            />\r\n         )\r\n      }\r\n\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Diagnosis;\r\n","import React, { Component } from \"react\";\r\n\r\n//Route Dependencies\r\nimport Auth from \"../../utils/Auth\"\r\n\r\nclass Login extends Component {\r\n\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"container\">\r\n            <div className=\"row\">\r\n               <div className=\"col s12\">\r\n                  <h3 className=\"center\">Login</h3>\r\n\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n               <div className=\"col s12 m6\">\r\n                  <div className=\"card grey lighten-2\">\r\n                     <div className=\"card-content Black-text\">\r\n                        <p>\r\n                           <a href=\"http://localhost:3001/auth/google\" class=\"waves-effect waves-light btn\">Signin With google</a>\r\n                        </p>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n\r\n         </div>\r\n      )\r\n   }\r\n\r\n}\r\n\r\nexport default Login;","// done by arif (+ Troy :3) \r\n\r\n// -------------------- Import Dependencies --------------------------------\r\n// React Dependencies\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n// Component Dependencies\r\n\r\n// Page Dependencies \r\nimport Home from \"./sub-pages/Home\";\r\nimport Trends from \"./sub-pages/trends\";\r\nimport ErrorPage from \"./sub-pages/ErrorPage\";\r\nimport Diagnosis from \"./sub-pages/Diagnosis/Diagnosis\";\r\nimport login from \"./sub-pages/Login\"\r\n\r\nfunction MainApp() {\r\n    return (\r\n    <div>\r\n        <Router>\r\n            <Switch>\r\n                {/* Root Path - HomePage */}\r\n                <Route exact path=\"/\" component={Home} />\r\n\r\n                {/* /Login - login Page */}   \r\n                <Route exact path=\"/login\" component={login} />   \r\n\r\n                {/* /Diagnosis Paths - Diagnosis Page */}   \r\n                <Route exact path=\"/diagnosis\" component={Diagnosis} />\r\n                \r\n\r\n                {/* /Trends Path - Trends Page */}   \r\n                <Route exact path=\"/trends\" component={Trends} />   \r\n            \r\n                {/* If No Route match - Display Error Page */}\r\n                <Route component={ErrorPage} />\r\n            </Switch> \r\n        </Router>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default MainApp;\r\n","// done by arif (+ Troy :3) \r\n\r\n// ---- Import Dependencies ----\r\n// React Dependencies\r\nimport React from \"react\";\r\n\r\n// Component Dependencies\r\n\r\n// Page Dependencies \r\nimport MainApp from \"./pages/MainApp\";\r\n\r\nfunction App() {\r\n  return (\r\n      <MainApp />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","//Navbar React Stateless Component\r\n\r\n//Import Dependencies\r\nimport React from \"react\";\r\n\r\nfunction Navbar() {\r\n   return (\r\n      <nav>\r\n         <div class=\"nav-wrapper deep-purple lighten-1\">\r\n            <a href=\"/\" class=\"brand-logo center\" ><i class=\"large material-icons left headerLogo\">healing</i>MED 2.0</a>\r\n            <ul class=\"right\">\r\n               <li><a href=\"badges.html\"><i class=\"material-icons left\">view_module</i>Presentation</a></li>\r\n               <li><a href=\"/login\"><i class=\"material-icons left\">touch_app</i>Login</a></li>\r\n            </ul>\r\n         </div>\r\n      </nav>\r\n   );\r\n}\r\n\r\nexport default Navbar;","// Notes Below:\r\n// Team! this is component uses Materialize <- Thanks for letting me know! :D Troy\r\n\r\n//Import Dependencies\r\nimport React from \"react\";\r\n\r\nfunction Footer() {\r\n\r\n\r\n   return (\r\n      <div className=\"page-footer deep-purple lighten-1\">\r\n         <div className=\"container\">\r\n            <div className=\"row\">\r\n               <div className=\"col l6 s12\">\r\n                  <h5 className=\"white-text\">The Med 2.0 Project</h5>\r\n                  <a href=\"https://github.com/Garciat427/Med-2.0\">\r\n                     <p className=\"grey-text text-lighten-4 valign-wrapper buttonLink\">\r\n                        <i className=\"link-Footer fab fa-github\"></i> Visit the Project Git repository here\r\n                     </p>\r\n                  </a>\r\n                  <a href=\"https://sustainabledevelopment.un.org/sdgs\">\r\n                     <p className=\"grey-text text-lighten-4 valign-wrapper\">\r\n                        This project was inspired by the Sustainable Developmental Goals provided by the UN\r\n                     </p>\r\n                     <p className=\"grey-text text-lighten-4 valign-wrapper buttonLink\">\r\n                        <i class=\"link-Footer fas fa-flag\"></i> Click here to learn more\r\n                     </p>\r\n                  </a>\r\n               </div>\r\n               <div className=\"col l4 offset-l2 s12\">\r\n                  <ul> \r\n                     <h6 className=\"white-text\">Team Links</h6>\r\n                     <li className=\"footerLink\"><a className=\"valign-wrapper grey-text text-lighten-3 buttonLink\" href=\"https://github.com/arif2301\"><i className=\"link-Footer fab fa-github\"></i>Arifur Rahman</a></li>\r\n\r\n                     <li className=\"footerLink\"><a className=\"valign-wrapper grey-text text-lighten-3 buttonLink\" href=\"https://github.com/lcocard\"><i className=\"link-Footer fab fa-github\"></i> Lawrence Cocard</a></li>\r\n\r\n                     <li className=\"footerLink\"><a className=\"valign-wrapper grey-text text-lighten-3 buttonLink\" href=\"https://github.com/majedline\"><i className=\"link-Footer fab fa-github\"></i> Majed Atwi</a></li>\r\n                     \r\n                     <li className=\"footerLink\"><a className=\"valign-wrapper grey-text text-lighten-3 buttonLink\" href=\"https://github.com/Garciat427\"><i className=\"link-Footer fab fa-github\"></i> Troy Garcia</a></li>\r\n                  </ul>\r\n               </div>\r\n            </div>\r\n         </div>\r\n         <div class=\"footer-copyright\">\r\n            <div class=\"container\">\r\n               © 2019 Copyright Med 2.0\r\n            <a class=\"grey-text text-lighten-4 right buttonLink\" href=\"https://materializecss.com/\">This site was developed using the Materalize Framework</a>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nReactDOM.render(<Navbar /> , document.getElementById(\"rootNavbar\"));\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nReactDOM.render(<Footer />, document.getElementById(\"rootFooter\"));\r\n"],"sourceRoot":""}